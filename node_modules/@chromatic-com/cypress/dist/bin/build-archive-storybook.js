#!/usr/bin/env node
'use strict';

var child_process = require('child_process');
var c = require('path');
var fs = require('fs');
var promises = require('fs/promises');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var c__default = /*#__PURE__*/_interopDefault(c);

var U=Object.defineProperty;var i=(e,r)=>U(e,"name",{value:r,configurable:!0}),u=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var G=Object.defineProperty,o=i((e,r)=>G(e,"name",{value:r,configurable:!0}),"r"),w=(e=>typeof u<"u"?u:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof u<"u"?u:r)[t]}):e)(function(e){if(typeof u<"u")return u.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});function S(){return process.cwd()}i(S,"V");o(S,"rootDir");function F(){let{CHROMATIC_ARCHIVE_LOCATION:e}=process.env;return e}i(F,"O");o(F,"outputDirOverride");function l(e){let r=F()||e;return c__default.default.resolve(S(),r,"chromatic-archives")}i(l,"c");o(l,"archivesDir");function k(e){return c__default.default.resolve(l(e),"archive")}i(k,"d");o(k,"assetsDir");function d(e){let r=l(e);if(!fs.existsSync(r))throw new Error(`Chromatic archives directory cannot be found: ${r}

Please make sure that you have run your E2E tests, or have set the CHROMATIC_ARCHIVE_LOCATION env var if the output directory for the tests is not in the standard location.`)}i(d,"h");o(d,"checkArchivesDirExists");function O(e){fs.existsSync(e)||fs.mkdirSync(e,{recursive:!0});}i(O,"$");o(O,"ensureDir");async function T(e,r){return O(c__default.default.dirname(e)),promises.writeFile(e,r,{mode:511})}i(T,"C");o(T,"outputFile");async function A(e,r){return T(e,JSON.stringify(r))}i(A,"w");o(A,"outputJSONFile");async function C(e){let r=await promises.readFile(e);return JSON.parse(r.toString())}i(C,"x");o(C,"readJSONFile");function p(e){return `w${e.width}h${e.height}`}i(p,"a");o(p,"viewportToString");function D(e){let r=e.match(/w(\d+)h(\d+)/);return {width:Number(r[1]),height:Number(r[2])}}i(D,"N");o(D,"parseViewport");var X="snapshot.json";function x(e){let r=e.split(".");return r.slice(0,r.length-3).join(".")}i(x,"F");o(x,"snapshotIdFromFileName");function E(e){let r=e.split("."),t=r[r.length-3];return D(t)}i(E,"S");o(E,"viewportFromFileName");async function N(e){return (await promises.readdir(e)).filter(r=>r.endsWith(`.${X}`))}i(N,"v");o(N,"listSnapshotFiles");var B="stories.json";function _(e,r){let{stories:t}=e,n=t.map(s=>{let h=s.parameters.server.id,a=r[h];return {...s,parameters:{...s.parameters,chromatic:{...s.parameters.chromatic,modes:V(a)},viewport:{viewports:P(a),defaultViewport:p($(a))}}}});return {...e,stories:n}}i(_,"g");o(_,"addViewportsToStories");async function I(e){return (await promises.readdir(e)).filter(r=>r.endsWith(`.${B}`))}i(I,"E");o(I,"listStoriesFiles");function V(e){return e.reduce((r,t)=>{let n=p(t);return r[n]={viewport:n},r},{})}i(V,"X");o(V,"buildStoryModesConfig");function P(e){return e.reduce((r,t)=>{let n=p(t);return r[n]={name:n,styles:{width:`${t.width}px`,height:`${t.height}px`}},r},{})}i(P,"W");o(P,"buildStoryViewportsConfig");function $(e){let r=o((t,n)=>t.width<n.width?1:t.width>n.width?-1:0,"compareFn");return e.sort(r)[0]}i($,"z");o($,"findDefaultViewport");async function f(e){let r=k(e),t=await N(r),n=q(t),s=l(e),h=(await I(s)).map(a=>c__default.default.resolve(s,a));await Promise.all(h.map(async a=>{let j=await C(a),L=_(j,n);await A(a,L);}));}i(f,"l");o(f,"addViewportsToStoriesFiles");function q(e){let r={};return e.forEach(t=>{let n=x(t),s=r[n]||[];s.push(E(t)),r[n]=s;}),r}i(q,"G");o(q,"buildSnapshotViewportsLookup");function K(e,r,t){d(t),f(t).then(()=>{child_process.execFileSync("node",[v(),"dev",...e,"-c",r],{stdio:"inherit"});});}i(K,"Lt");o(K,"archiveStorybook");function m(e,r,t){d(t),f(t).then(()=>{child_process.execFileSync("node",[v(),"build",...e,"-c",r],{stdio:"inherit"});});}i(m,"kt");o(m,"buildArchiveStorybook");function v(){let e=w("storybook/package.json");return c.resolve(c.dirname(w.resolve("storybook/package.json")),e.bin.storybook)}i(v,"I");o(v,"binPath");var R="cypress/downloads";var Y=process.argv.slice(2),Z=c__default.default.resolve(__dirname,"../storybook-config");try{m(Y,Z,R);}catch(e){console.error(e.message),process.exitCode=1;}
//# sourceMappingURL=out.js.map
//# sourceMappingURL=build-archive-storybook.js.map